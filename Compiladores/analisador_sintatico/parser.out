Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> primitive_class_declaration statement
Rule 2     statement -> defined_class_declaration statement
Rule 3     statement -> cobert_class_declaration statement
Rule 4     statement -> primitive_class_declaration
Rule 5     statement -> defined_class_declaration
Rule 6     statement -> cobert_class_declaration
Rule 7     primitive_class_declaration -> valid_class_declaration valid_subclass_of valid_disjoint_classes valid_individuals
Rule 8     defined_class_declaration -> valid_class_declaration valid_equivalent_to valid_individuals
Rule 9     defined_class_declaration -> valid_class_declaration valid_equivalent_to
Rule 10    cobert_class_declaration -> valid_class_declaration valid_equivalent_to_c
Rule 11    valid_equivalent_to_c -> reserved_word_declaration special_symbols_declaration equivalent_to_c
Rule 12    equivalent_to_c -> equivalent_to_c_classes
Rule 13    equivalent_to_c_classes -> class_declaration reserved_word_declaration equivalent_to_c_classes
Rule 14    equivalent_to_c_classes -> class_declaration
Rule 15    valid_equivalent_to -> reserved_word_declaration special_symbols_declaration equivalent_to
Rule 16    equivalent_to -> class_declaration reserved_word_declaration equivalent_to_conjunt
Rule 17    equivalent_to -> class_declaration reserved_word_declaration equivalent_to_conjunt_cardi
Rule 18    equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
Rule 19    equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
Rule 20    equivalent_to_conjunt -> special_symbols_declaration properties_declaration reserved_word_declaration class_declaration special_symbols_declaration
Rule 21    valid_disjoint_classes -> reserved_word_declaration special_symbols_declaration valid_disjoint_list
Rule 22    valid_disjoint_list -> class_declaration special_symbols_declaration valid_disjoint_list
Rule 23    valid_disjoint_list -> class_declaration
Rule 24    valid_subclass_of -> reserved_word_declaration special_symbols_declaration valid_subclass_of_list
Rule 25    valid_subclass_of_list -> properties_declaration reserved_word_declaration class_declaration special_symbols_declaration valid_subclass_of_list
Rule 26    valid_subclass_of_list -> properties_declaration reserved_word_declaration class_declaration
Rule 27    valid_subclass_of_list -> properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration valid_subclass_of_list
Rule 28    valid_subclass_of_list -> properties_declaration reserved_word_declaration data_types_declaration
Rule 29    valid_individuals -> reserved_word_declaration special_symbols_declaration valid_individuals_list
Rule 30    valid_individuals_list -> individuals_declaration special_symbols_declaration valid_individuals_list
Rule 31    valid_individuals_list -> individuals_declaration
Rule 32    valid_class_declaration -> reserved_word_declaration special_symbols_declaration class_declaration
Rule 33    class_declaration -> CLASS
Rule 34    properties_declaration -> PROPERTIES
Rule 35    individuals_declaration -> INDIVIDUALS
Rule 36    reserved_word_declaration -> RESERVED_WORD
Rule 37    special_symbols_declaration -> SPECIAL_SYMBOLS
Rule 38    data_types_declaration -> DATA_TYPES
Rule 39    cardinalities_declaration -> CARDINALITIES

Terminals, with rules where they appear

CARDINALITIES        : 39
CLASS                : 33
DATA_TYPES           : 38
INDIVIDUALS          : 35
PROPERTIES           : 34
RESERVED_WORD        : 36
SPECIAL_SYMBOLS      : 37
error                : 

Nonterminals, with rules where they appear

cardinalities_declaration : 18 19
class_declaration    : 13 14 16 17 20 22 23 25 26 32
cobert_class_declaration : 3 6
data_types_declaration : 18 19 27 28
defined_class_declaration : 2 5
equivalent_to        : 15
equivalent_to_c      : 11
equivalent_to_c_classes : 12 13
equivalent_to_conjunt : 16
equivalent_to_conjunt_cardi : 17
individuals_declaration : 30 31
primitive_class_declaration : 1 4
properties_declaration : 18 19 20 25 26 27 28
reserved_word_declaration : 11 13 15 16 17 18 19 20 21 24 25 26 27 28 29 32
special_symbols_declaration : 11 15 18 18 18 18 18 18 19 19 19 19 19 20 20 21 22 24 25 27 29 30 32
statement            : 1 2 3 0
valid_class_declaration : 7 8 9 10
valid_disjoint_classes : 7
valid_disjoint_list  : 21 22
valid_equivalent_to  : 8 9
valid_equivalent_to_c : 10
valid_individuals    : 7 8
valid_individuals_list : 29 30
valid_subclass_of    : 7
valid_subclass_of_list : 24 25 27

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . primitive_class_declaration statement
    (2) statement -> . defined_class_declaration statement
    (3) statement -> . cobert_class_declaration statement
    (4) statement -> . primitive_class_declaration
    (5) statement -> . defined_class_declaration
    (6) statement -> . cobert_class_declaration
    (7) primitive_class_declaration -> . valid_class_declaration valid_subclass_of valid_disjoint_classes valid_individuals
    (8) defined_class_declaration -> . valid_class_declaration valid_equivalent_to valid_individuals
    (9) defined_class_declaration -> . valid_class_declaration valid_equivalent_to
    (10) cobert_class_declaration -> . valid_class_declaration valid_equivalent_to_c
    (32) valid_class_declaration -> . reserved_word_declaration special_symbols_declaration class_declaration
    (36) reserved_word_declaration -> . RESERVED_WORD

    RESERVED_WORD   shift and go to state 7

    statement                      shift and go to state 1
    primitive_class_declaration    shift and go to state 2
    defined_class_declaration      shift and go to state 3
    cobert_class_declaration       shift and go to state 4
    valid_class_declaration        shift and go to state 5
    reserved_word_declaration      shift and go to state 6

state 1

    (0) S' -> statement .



state 2

    (1) statement -> primitive_class_declaration . statement
    (4) statement -> primitive_class_declaration .
    (1) statement -> . primitive_class_declaration statement
    (2) statement -> . defined_class_declaration statement
    (3) statement -> . cobert_class_declaration statement
    (4) statement -> . primitive_class_declaration
    (5) statement -> . defined_class_declaration
    (6) statement -> . cobert_class_declaration
    (7) primitive_class_declaration -> . valid_class_declaration valid_subclass_of valid_disjoint_classes valid_individuals
    (8) defined_class_declaration -> . valid_class_declaration valid_equivalent_to valid_individuals
    (9) defined_class_declaration -> . valid_class_declaration valid_equivalent_to
    (10) cobert_class_declaration -> . valid_class_declaration valid_equivalent_to_c
    (32) valid_class_declaration -> . reserved_word_declaration special_symbols_declaration class_declaration
    (36) reserved_word_declaration -> . RESERVED_WORD

    $end            reduce using rule 4 (statement -> primitive_class_declaration .)
    RESERVED_WORD   shift and go to state 7

    primitive_class_declaration    shift and go to state 2
    statement                      shift and go to state 8
    defined_class_declaration      shift and go to state 3
    cobert_class_declaration       shift and go to state 4
    valid_class_declaration        shift and go to state 5
    reserved_word_declaration      shift and go to state 6

state 3

    (2) statement -> defined_class_declaration . statement
    (5) statement -> defined_class_declaration .
    (1) statement -> . primitive_class_declaration statement
    (2) statement -> . defined_class_declaration statement
    (3) statement -> . cobert_class_declaration statement
    (4) statement -> . primitive_class_declaration
    (5) statement -> . defined_class_declaration
    (6) statement -> . cobert_class_declaration
    (7) primitive_class_declaration -> . valid_class_declaration valid_subclass_of valid_disjoint_classes valid_individuals
    (8) defined_class_declaration -> . valid_class_declaration valid_equivalent_to valid_individuals
    (9) defined_class_declaration -> . valid_class_declaration valid_equivalent_to
    (10) cobert_class_declaration -> . valid_class_declaration valid_equivalent_to_c
    (32) valid_class_declaration -> . reserved_word_declaration special_symbols_declaration class_declaration
    (36) reserved_word_declaration -> . RESERVED_WORD

    $end            reduce using rule 5 (statement -> defined_class_declaration .)
    RESERVED_WORD   shift and go to state 7

    defined_class_declaration      shift and go to state 3
    statement                      shift and go to state 9
    primitive_class_declaration    shift and go to state 2
    cobert_class_declaration       shift and go to state 4
    valid_class_declaration        shift and go to state 5
    reserved_word_declaration      shift and go to state 6

state 4

    (3) statement -> cobert_class_declaration . statement
    (6) statement -> cobert_class_declaration .
    (1) statement -> . primitive_class_declaration statement
    (2) statement -> . defined_class_declaration statement
    (3) statement -> . cobert_class_declaration statement
    (4) statement -> . primitive_class_declaration
    (5) statement -> . defined_class_declaration
    (6) statement -> . cobert_class_declaration
    (7) primitive_class_declaration -> . valid_class_declaration valid_subclass_of valid_disjoint_classes valid_individuals
    (8) defined_class_declaration -> . valid_class_declaration valid_equivalent_to valid_individuals
    (9) defined_class_declaration -> . valid_class_declaration valid_equivalent_to
    (10) cobert_class_declaration -> . valid_class_declaration valid_equivalent_to_c
    (32) valid_class_declaration -> . reserved_word_declaration special_symbols_declaration class_declaration
    (36) reserved_word_declaration -> . RESERVED_WORD

    $end            reduce using rule 6 (statement -> cobert_class_declaration .)
    RESERVED_WORD   shift and go to state 7

    cobert_class_declaration       shift and go to state 4
    statement                      shift and go to state 10
    primitive_class_declaration    shift and go to state 2
    defined_class_declaration      shift and go to state 3
    valid_class_declaration        shift and go to state 5
    reserved_word_declaration      shift and go to state 6

state 5

    (7) primitive_class_declaration -> valid_class_declaration . valid_subclass_of valid_disjoint_classes valid_individuals
    (8) defined_class_declaration -> valid_class_declaration . valid_equivalent_to valid_individuals
    (9) defined_class_declaration -> valid_class_declaration . valid_equivalent_to
    (10) cobert_class_declaration -> valid_class_declaration . valid_equivalent_to_c
    (24) valid_subclass_of -> . reserved_word_declaration special_symbols_declaration valid_subclass_of_list
    (15) valid_equivalent_to -> . reserved_word_declaration special_symbols_declaration equivalent_to
    (11) valid_equivalent_to_c -> . reserved_word_declaration special_symbols_declaration equivalent_to_c
    (36) reserved_word_declaration -> . RESERVED_WORD

    RESERVED_WORD   shift and go to state 7

    valid_subclass_of              shift and go to state 11
    valid_equivalent_to            shift and go to state 12
    valid_equivalent_to_c          shift and go to state 13
    reserved_word_declaration      shift and go to state 14

state 6

    (32) valid_class_declaration -> reserved_word_declaration . special_symbols_declaration class_declaration
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 15

state 7

    (36) reserved_word_declaration -> RESERVED_WORD .

    SPECIAL_SYMBOLS reduce using rule 36 (reserved_word_declaration -> RESERVED_WORD .)
    CLASS           reduce using rule 36 (reserved_word_declaration -> RESERVED_WORD .)
    DATA_TYPES      reduce using rule 36 (reserved_word_declaration -> RESERVED_WORD .)


state 8

    (1) statement -> primitive_class_declaration statement .

    $end            reduce using rule 1 (statement -> primitive_class_declaration statement .)


state 9

    (2) statement -> defined_class_declaration statement .

    $end            reduce using rule 2 (statement -> defined_class_declaration statement .)


state 10

    (3) statement -> cobert_class_declaration statement .

    $end            reduce using rule 3 (statement -> cobert_class_declaration statement .)


state 11

    (7) primitive_class_declaration -> valid_class_declaration valid_subclass_of . valid_disjoint_classes valid_individuals
    (21) valid_disjoint_classes -> . reserved_word_declaration special_symbols_declaration valid_disjoint_list
    (36) reserved_word_declaration -> . RESERVED_WORD

    RESERVED_WORD   shift and go to state 7

    valid_disjoint_classes         shift and go to state 17
    reserved_word_declaration      shift and go to state 18

state 12

    (8) defined_class_declaration -> valid_class_declaration valid_equivalent_to . valid_individuals
    (9) defined_class_declaration -> valid_class_declaration valid_equivalent_to .
    (29) valid_individuals -> . reserved_word_declaration special_symbols_declaration valid_individuals_list
    (36) reserved_word_declaration -> . RESERVED_WORD

  ! shift/reduce conflict for RESERVED_WORD resolved as shift
    $end            reduce using rule 9 (defined_class_declaration -> valid_class_declaration valid_equivalent_to .)
    RESERVED_WORD   shift and go to state 7

  ! RESERVED_WORD   [ reduce using rule 9 (defined_class_declaration -> valid_class_declaration valid_equivalent_to .) ]

    valid_individuals              shift and go to state 19
    reserved_word_declaration      shift and go to state 20

state 13

    (10) cobert_class_declaration -> valid_class_declaration valid_equivalent_to_c .

    RESERVED_WORD   reduce using rule 10 (cobert_class_declaration -> valid_class_declaration valid_equivalent_to_c .)
    $end            reduce using rule 10 (cobert_class_declaration -> valid_class_declaration valid_equivalent_to_c .)


state 14

    (24) valid_subclass_of -> reserved_word_declaration . special_symbols_declaration valid_subclass_of_list
    (15) valid_equivalent_to -> reserved_word_declaration . special_symbols_declaration equivalent_to
    (11) valid_equivalent_to_c -> reserved_word_declaration . special_symbols_declaration equivalent_to_c
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 21

state 15

    (32) valid_class_declaration -> reserved_word_declaration special_symbols_declaration . class_declaration
    (33) class_declaration -> . CLASS

    CLASS           shift and go to state 23

    class_declaration              shift and go to state 22

state 16

    (37) special_symbols_declaration -> SPECIAL_SYMBOLS .

    CLASS           reduce using rule 37 (special_symbols_declaration -> SPECIAL_SYMBOLS .)
    PROPERTIES      reduce using rule 37 (special_symbols_declaration -> SPECIAL_SYMBOLS .)
    INDIVIDUALS     reduce using rule 37 (special_symbols_declaration -> SPECIAL_SYMBOLS .)
    RESERVED_WORD   reduce using rule 37 (special_symbols_declaration -> SPECIAL_SYMBOLS .)
    $end            reduce using rule 37 (special_symbols_declaration -> SPECIAL_SYMBOLS .)
    SPECIAL_SYMBOLS reduce using rule 37 (special_symbols_declaration -> SPECIAL_SYMBOLS .)
    CARDINALITIES   reduce using rule 37 (special_symbols_declaration -> SPECIAL_SYMBOLS .)


state 17

    (7) primitive_class_declaration -> valid_class_declaration valid_subclass_of valid_disjoint_classes . valid_individuals
    (29) valid_individuals -> . reserved_word_declaration special_symbols_declaration valid_individuals_list
    (36) reserved_word_declaration -> . RESERVED_WORD

    RESERVED_WORD   shift and go to state 7

    valid_individuals              shift and go to state 24
    reserved_word_declaration      shift and go to state 20

state 18

    (21) valid_disjoint_classes -> reserved_word_declaration . special_symbols_declaration valid_disjoint_list
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 25

state 19

    (8) defined_class_declaration -> valid_class_declaration valid_equivalent_to valid_individuals .

    RESERVED_WORD   reduce using rule 8 (defined_class_declaration -> valid_class_declaration valid_equivalent_to valid_individuals .)
    $end            reduce using rule 8 (defined_class_declaration -> valid_class_declaration valid_equivalent_to valid_individuals .)


state 20

    (29) valid_individuals -> reserved_word_declaration . special_symbols_declaration valid_individuals_list
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 26

state 21

    (24) valid_subclass_of -> reserved_word_declaration special_symbols_declaration . valid_subclass_of_list
    (15) valid_equivalent_to -> reserved_word_declaration special_symbols_declaration . equivalent_to
    (11) valid_equivalent_to_c -> reserved_word_declaration special_symbols_declaration . equivalent_to_c
    (25) valid_subclass_of_list -> . properties_declaration reserved_word_declaration class_declaration special_symbols_declaration valid_subclass_of_list
    (26) valid_subclass_of_list -> . properties_declaration reserved_word_declaration class_declaration
    (27) valid_subclass_of_list -> . properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration valid_subclass_of_list
    (28) valid_subclass_of_list -> . properties_declaration reserved_word_declaration data_types_declaration
    (16) equivalent_to -> . class_declaration reserved_word_declaration equivalent_to_conjunt
    (17) equivalent_to -> . class_declaration reserved_word_declaration equivalent_to_conjunt_cardi
    (12) equivalent_to_c -> . equivalent_to_c_classes
    (34) properties_declaration -> . PROPERTIES
    (33) class_declaration -> . CLASS
    (13) equivalent_to_c_classes -> . class_declaration reserved_word_declaration equivalent_to_c_classes
    (14) equivalent_to_c_classes -> . class_declaration

    PROPERTIES      shift and go to state 33
    CLASS           shift and go to state 23

    valid_subclass_of_list         shift and go to state 27
    equivalent_to                  shift and go to state 28
    equivalent_to_c                shift and go to state 29
    properties_declaration         shift and go to state 30
    class_declaration              shift and go to state 31
    equivalent_to_c_classes        shift and go to state 32

state 22

    (32) valid_class_declaration -> reserved_word_declaration special_symbols_declaration class_declaration .

    RESERVED_WORD   reduce using rule 32 (valid_class_declaration -> reserved_word_declaration special_symbols_declaration class_declaration .)


state 23

    (33) class_declaration -> CLASS .

    RESERVED_WORD   reduce using rule 33 (class_declaration -> CLASS .)
    $end            reduce using rule 33 (class_declaration -> CLASS .)
    SPECIAL_SYMBOLS reduce using rule 33 (class_declaration -> CLASS .)


state 24

    (7) primitive_class_declaration -> valid_class_declaration valid_subclass_of valid_disjoint_classes valid_individuals .

    RESERVED_WORD   reduce using rule 7 (primitive_class_declaration -> valid_class_declaration valid_subclass_of valid_disjoint_classes valid_individuals .)
    $end            reduce using rule 7 (primitive_class_declaration -> valid_class_declaration valid_subclass_of valid_disjoint_classes valid_individuals .)


state 25

    (21) valid_disjoint_classes -> reserved_word_declaration special_symbols_declaration . valid_disjoint_list
    (22) valid_disjoint_list -> . class_declaration special_symbols_declaration valid_disjoint_list
    (23) valid_disjoint_list -> . class_declaration
    (33) class_declaration -> . CLASS

    CLASS           shift and go to state 23

    valid_disjoint_list            shift and go to state 34
    class_declaration              shift and go to state 35

state 26

    (29) valid_individuals -> reserved_word_declaration special_symbols_declaration . valid_individuals_list
    (30) valid_individuals_list -> . individuals_declaration special_symbols_declaration valid_individuals_list
    (31) valid_individuals_list -> . individuals_declaration
    (35) individuals_declaration -> . INDIVIDUALS

    INDIVIDUALS     shift and go to state 38

    valid_individuals_list         shift and go to state 36
    individuals_declaration        shift and go to state 37

state 27

    (24) valid_subclass_of -> reserved_word_declaration special_symbols_declaration valid_subclass_of_list .

    RESERVED_WORD   reduce using rule 24 (valid_subclass_of -> reserved_word_declaration special_symbols_declaration valid_subclass_of_list .)


state 28

    (15) valid_equivalent_to -> reserved_word_declaration special_symbols_declaration equivalent_to .

    RESERVED_WORD   reduce using rule 15 (valid_equivalent_to -> reserved_word_declaration special_symbols_declaration equivalent_to .)
    $end            reduce using rule 15 (valid_equivalent_to -> reserved_word_declaration special_symbols_declaration equivalent_to .)


state 29

    (11) valid_equivalent_to_c -> reserved_word_declaration special_symbols_declaration equivalent_to_c .

    RESERVED_WORD   reduce using rule 11 (valid_equivalent_to_c -> reserved_word_declaration special_symbols_declaration equivalent_to_c .)
    $end            reduce using rule 11 (valid_equivalent_to_c -> reserved_word_declaration special_symbols_declaration equivalent_to_c .)


state 30

    (25) valid_subclass_of_list -> properties_declaration . reserved_word_declaration class_declaration special_symbols_declaration valid_subclass_of_list
    (26) valid_subclass_of_list -> properties_declaration . reserved_word_declaration class_declaration
    (27) valid_subclass_of_list -> properties_declaration . reserved_word_declaration data_types_declaration special_symbols_declaration valid_subclass_of_list
    (28) valid_subclass_of_list -> properties_declaration . reserved_word_declaration data_types_declaration
    (36) reserved_word_declaration -> . RESERVED_WORD

    RESERVED_WORD   shift and go to state 7

    reserved_word_declaration      shift and go to state 39

state 31

    (16) equivalent_to -> class_declaration . reserved_word_declaration equivalent_to_conjunt
    (17) equivalent_to -> class_declaration . reserved_word_declaration equivalent_to_conjunt_cardi
    (13) equivalent_to_c_classes -> class_declaration . reserved_word_declaration equivalent_to_c_classes
    (14) equivalent_to_c_classes -> class_declaration .
    (36) reserved_word_declaration -> . RESERVED_WORD

  ! shift/reduce conflict for RESERVED_WORD resolved as shift
    $end            reduce using rule 14 (equivalent_to_c_classes -> class_declaration .)
    RESERVED_WORD   shift and go to state 7

  ! RESERVED_WORD   [ reduce using rule 14 (equivalent_to_c_classes -> class_declaration .) ]

    reserved_word_declaration      shift and go to state 40

state 32

    (12) equivalent_to_c -> equivalent_to_c_classes .

    RESERVED_WORD   reduce using rule 12 (equivalent_to_c -> equivalent_to_c_classes .)
    $end            reduce using rule 12 (equivalent_to_c -> equivalent_to_c_classes .)


state 33

    (34) properties_declaration -> PROPERTIES .

    RESERVED_WORD   reduce using rule 34 (properties_declaration -> PROPERTIES .)


state 34

    (21) valid_disjoint_classes -> reserved_word_declaration special_symbols_declaration valid_disjoint_list .

    RESERVED_WORD   reduce using rule 21 (valid_disjoint_classes -> reserved_word_declaration special_symbols_declaration valid_disjoint_list .)


state 35

    (22) valid_disjoint_list -> class_declaration . special_symbols_declaration valid_disjoint_list
    (23) valid_disjoint_list -> class_declaration .
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    RESERVED_WORD   reduce using rule 23 (valid_disjoint_list -> class_declaration .)
    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 41

state 36

    (29) valid_individuals -> reserved_word_declaration special_symbols_declaration valid_individuals_list .

    RESERVED_WORD   reduce using rule 29 (valid_individuals -> reserved_word_declaration special_symbols_declaration valid_individuals_list .)
    $end            reduce using rule 29 (valid_individuals -> reserved_word_declaration special_symbols_declaration valid_individuals_list .)


state 37

    (30) valid_individuals_list -> individuals_declaration . special_symbols_declaration valid_individuals_list
    (31) valid_individuals_list -> individuals_declaration .
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    RESERVED_WORD   reduce using rule 31 (valid_individuals_list -> individuals_declaration .)
    $end            reduce using rule 31 (valid_individuals_list -> individuals_declaration .)
    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 42

state 38

    (35) individuals_declaration -> INDIVIDUALS .

    SPECIAL_SYMBOLS reduce using rule 35 (individuals_declaration -> INDIVIDUALS .)
    RESERVED_WORD   reduce using rule 35 (individuals_declaration -> INDIVIDUALS .)
    $end            reduce using rule 35 (individuals_declaration -> INDIVIDUALS .)


state 39

    (25) valid_subclass_of_list -> properties_declaration reserved_word_declaration . class_declaration special_symbols_declaration valid_subclass_of_list
    (26) valid_subclass_of_list -> properties_declaration reserved_word_declaration . class_declaration
    (27) valid_subclass_of_list -> properties_declaration reserved_word_declaration . data_types_declaration special_symbols_declaration valid_subclass_of_list
    (28) valid_subclass_of_list -> properties_declaration reserved_word_declaration . data_types_declaration
    (33) class_declaration -> . CLASS
    (38) data_types_declaration -> . DATA_TYPES

    CLASS           shift and go to state 23
    DATA_TYPES      shift and go to state 45

    class_declaration              shift and go to state 43
    data_types_declaration         shift and go to state 44

state 40

    (16) equivalent_to -> class_declaration reserved_word_declaration . equivalent_to_conjunt
    (17) equivalent_to -> class_declaration reserved_word_declaration . equivalent_to_conjunt_cardi
    (13) equivalent_to_c_classes -> class_declaration reserved_word_declaration . equivalent_to_c_classes
    (20) equivalent_to_conjunt -> . special_symbols_declaration properties_declaration reserved_word_declaration class_declaration special_symbols_declaration
    (18) equivalent_to_conjunt_cardi -> . special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (19) equivalent_to_conjunt_cardi -> . special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (13) equivalent_to_c_classes -> . class_declaration reserved_word_declaration equivalent_to_c_classes
    (14) equivalent_to_c_classes -> . class_declaration
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS
    (33) class_declaration -> . CLASS

    SPECIAL_SYMBOLS shift and go to state 16
    CLASS           shift and go to state 23

    class_declaration              shift and go to state 46
    equivalent_to_conjunt          shift and go to state 47
    equivalent_to_conjunt_cardi    shift and go to state 48
    equivalent_to_c_classes        shift and go to state 49
    special_symbols_declaration    shift and go to state 50

state 41

    (22) valid_disjoint_list -> class_declaration special_symbols_declaration . valid_disjoint_list
    (22) valid_disjoint_list -> . class_declaration special_symbols_declaration valid_disjoint_list
    (23) valid_disjoint_list -> . class_declaration
    (33) class_declaration -> . CLASS

    CLASS           shift and go to state 23

    class_declaration              shift and go to state 35
    valid_disjoint_list            shift and go to state 51

state 42

    (30) valid_individuals_list -> individuals_declaration special_symbols_declaration . valid_individuals_list
    (30) valid_individuals_list -> . individuals_declaration special_symbols_declaration valid_individuals_list
    (31) valid_individuals_list -> . individuals_declaration
    (35) individuals_declaration -> . INDIVIDUALS

    INDIVIDUALS     shift and go to state 38

    individuals_declaration        shift and go to state 37
    valid_individuals_list         shift and go to state 52

state 43

    (25) valid_subclass_of_list -> properties_declaration reserved_word_declaration class_declaration . special_symbols_declaration valid_subclass_of_list
    (26) valid_subclass_of_list -> properties_declaration reserved_word_declaration class_declaration .
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    RESERVED_WORD   reduce using rule 26 (valid_subclass_of_list -> properties_declaration reserved_word_declaration class_declaration .)
    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 53

state 44

    (27) valid_subclass_of_list -> properties_declaration reserved_word_declaration data_types_declaration . special_symbols_declaration valid_subclass_of_list
    (28) valid_subclass_of_list -> properties_declaration reserved_word_declaration data_types_declaration .
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    RESERVED_WORD   reduce using rule 28 (valid_subclass_of_list -> properties_declaration reserved_word_declaration data_types_declaration .)
    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 54

state 45

    (38) data_types_declaration -> DATA_TYPES .

    SPECIAL_SYMBOLS reduce using rule 38 (data_types_declaration -> DATA_TYPES .)
    RESERVED_WORD   reduce using rule 38 (data_types_declaration -> DATA_TYPES .)


state 46

    (13) equivalent_to_c_classes -> class_declaration . reserved_word_declaration equivalent_to_c_classes
    (14) equivalent_to_c_classes -> class_declaration .
    (36) reserved_word_declaration -> . RESERVED_WORD

  ! shift/reduce conflict for RESERVED_WORD resolved as shift
    $end            reduce using rule 14 (equivalent_to_c_classes -> class_declaration .)
    RESERVED_WORD   shift and go to state 7

  ! RESERVED_WORD   [ reduce using rule 14 (equivalent_to_c_classes -> class_declaration .) ]

    reserved_word_declaration      shift and go to state 55

state 47

    (16) equivalent_to -> class_declaration reserved_word_declaration equivalent_to_conjunt .

    RESERVED_WORD   reduce using rule 16 (equivalent_to -> class_declaration reserved_word_declaration equivalent_to_conjunt .)
    $end            reduce using rule 16 (equivalent_to -> class_declaration reserved_word_declaration equivalent_to_conjunt .)


state 48

    (17) equivalent_to -> class_declaration reserved_word_declaration equivalent_to_conjunt_cardi .

    RESERVED_WORD   reduce using rule 17 (equivalent_to -> class_declaration reserved_word_declaration equivalent_to_conjunt_cardi .)
    $end            reduce using rule 17 (equivalent_to -> class_declaration reserved_word_declaration equivalent_to_conjunt_cardi .)


state 49

    (13) equivalent_to_c_classes -> class_declaration reserved_word_declaration equivalent_to_c_classes .

    RESERVED_WORD   reduce using rule 13 (equivalent_to_c_classes -> class_declaration reserved_word_declaration equivalent_to_c_classes .)
    $end            reduce using rule 13 (equivalent_to_c_classes -> class_declaration reserved_word_declaration equivalent_to_c_classes .)


state 50

    (20) equivalent_to_conjunt -> special_symbols_declaration . properties_declaration reserved_word_declaration class_declaration special_symbols_declaration
    (18) equivalent_to_conjunt_cardi -> special_symbols_declaration . properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (19) equivalent_to_conjunt_cardi -> special_symbols_declaration . properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (34) properties_declaration -> . PROPERTIES

    PROPERTIES      shift and go to state 33

    properties_declaration         shift and go to state 56

state 51

    (22) valid_disjoint_list -> class_declaration special_symbols_declaration valid_disjoint_list .

    RESERVED_WORD   reduce using rule 22 (valid_disjoint_list -> class_declaration special_symbols_declaration valid_disjoint_list .)


state 52

    (30) valid_individuals_list -> individuals_declaration special_symbols_declaration valid_individuals_list .

    RESERVED_WORD   reduce using rule 30 (valid_individuals_list -> individuals_declaration special_symbols_declaration valid_individuals_list .)
    $end            reduce using rule 30 (valid_individuals_list -> individuals_declaration special_symbols_declaration valid_individuals_list .)


state 53

    (25) valid_subclass_of_list -> properties_declaration reserved_word_declaration class_declaration special_symbols_declaration . valid_subclass_of_list
    (25) valid_subclass_of_list -> . properties_declaration reserved_word_declaration class_declaration special_symbols_declaration valid_subclass_of_list
    (26) valid_subclass_of_list -> . properties_declaration reserved_word_declaration class_declaration
    (27) valid_subclass_of_list -> . properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration valid_subclass_of_list
    (28) valid_subclass_of_list -> . properties_declaration reserved_word_declaration data_types_declaration
    (34) properties_declaration -> . PROPERTIES

    PROPERTIES      shift and go to state 33

    properties_declaration         shift and go to state 30
    valid_subclass_of_list         shift and go to state 57

state 54

    (27) valid_subclass_of_list -> properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration . valid_subclass_of_list
    (25) valid_subclass_of_list -> . properties_declaration reserved_word_declaration class_declaration special_symbols_declaration valid_subclass_of_list
    (26) valid_subclass_of_list -> . properties_declaration reserved_word_declaration class_declaration
    (27) valid_subclass_of_list -> . properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration valid_subclass_of_list
    (28) valid_subclass_of_list -> . properties_declaration reserved_word_declaration data_types_declaration
    (34) properties_declaration -> . PROPERTIES

    PROPERTIES      shift and go to state 33

    properties_declaration         shift and go to state 30
    valid_subclass_of_list         shift and go to state 58

state 55

    (13) equivalent_to_c_classes -> class_declaration reserved_word_declaration . equivalent_to_c_classes
    (13) equivalent_to_c_classes -> . class_declaration reserved_word_declaration equivalent_to_c_classes
    (14) equivalent_to_c_classes -> . class_declaration
    (33) class_declaration -> . CLASS

    CLASS           shift and go to state 23

    class_declaration              shift and go to state 46
    equivalent_to_c_classes        shift and go to state 49

state 56

    (20) equivalent_to_conjunt -> special_symbols_declaration properties_declaration . reserved_word_declaration class_declaration special_symbols_declaration
    (18) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration . reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (19) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration . reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (36) reserved_word_declaration -> . RESERVED_WORD

    RESERVED_WORD   shift and go to state 7

    reserved_word_declaration      shift and go to state 59

state 57

    (25) valid_subclass_of_list -> properties_declaration reserved_word_declaration class_declaration special_symbols_declaration valid_subclass_of_list .

    RESERVED_WORD   reduce using rule 25 (valid_subclass_of_list -> properties_declaration reserved_word_declaration class_declaration special_symbols_declaration valid_subclass_of_list .)


state 58

    (27) valid_subclass_of_list -> properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration valid_subclass_of_list .

    RESERVED_WORD   reduce using rule 27 (valid_subclass_of_list -> properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration valid_subclass_of_list .)


state 59

    (20) equivalent_to_conjunt -> special_symbols_declaration properties_declaration reserved_word_declaration . class_declaration special_symbols_declaration
    (18) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration . data_types_declaration special_symbols_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (19) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration . data_types_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (33) class_declaration -> . CLASS
    (38) data_types_declaration -> . DATA_TYPES

    CLASS           shift and go to state 23
    DATA_TYPES      shift and go to state 45

    class_declaration              shift and go to state 60
    data_types_declaration         shift and go to state 61

state 60

    (20) equivalent_to_conjunt -> special_symbols_declaration properties_declaration reserved_word_declaration class_declaration . special_symbols_declaration
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 62

state 61

    (18) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration . special_symbols_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (19) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration . special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 63

state 62

    (20) equivalent_to_conjunt -> special_symbols_declaration properties_declaration reserved_word_declaration class_declaration special_symbols_declaration .

    RESERVED_WORD   reduce using rule 20 (equivalent_to_conjunt -> special_symbols_declaration properties_declaration reserved_word_declaration class_declaration special_symbols_declaration .)
    $end            reduce using rule 20 (equivalent_to_conjunt -> special_symbols_declaration properties_declaration reserved_word_declaration class_declaration special_symbols_declaration .)


state 63

    (18) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration . special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (19) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration . special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 64

state 64

    (18) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration . special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (19) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration . cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS
    (39) cardinalities_declaration -> . CARDINALITIES

    SPECIAL_SYMBOLS shift and go to state 16
    CARDINALITIES   shift and go to state 67

    special_symbols_declaration    shift and go to state 65
    cardinalities_declaration      shift and go to state 66

state 65

    (18) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration special_symbols_declaration . cardinalities_declaration special_symbols_declaration special_symbols_declaration
    (39) cardinalities_declaration -> . CARDINALITIES

    CARDINALITIES   shift and go to state 67

    cardinalities_declaration      shift and go to state 68

state 66

    (19) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration . special_symbols_declaration special_symbols_declaration
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 69

state 67

    (39) cardinalities_declaration -> CARDINALITIES .

    SPECIAL_SYMBOLS reduce using rule 39 (cardinalities_declaration -> CARDINALITIES .)


state 68

    (18) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration . special_symbols_declaration special_symbols_declaration
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 70

state 69

    (19) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration . special_symbols_declaration
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 71

state 70

    (18) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration . special_symbols_declaration
    (37) special_symbols_declaration -> . SPECIAL_SYMBOLS

    SPECIAL_SYMBOLS shift and go to state 16

    special_symbols_declaration    shift and go to state 72

state 71

    (19) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration .

    RESERVED_WORD   reduce using rule 19 (equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration .)
    $end            reduce using rule 19 (equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration .)


state 72

    (18) equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration .

    RESERVED_WORD   reduce using rule 18 (equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration .)
    $end            reduce using rule 18 (equivalent_to_conjunt_cardi -> special_symbols_declaration properties_declaration reserved_word_declaration data_types_declaration special_symbols_declaration special_symbols_declaration special_symbols_declaration cardinalities_declaration special_symbols_declaration special_symbols_declaration .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RESERVED_WORD in state 12 resolved as shift
WARNING: shift/reduce conflict for RESERVED_WORD in state 31 resolved as shift
WARNING: shift/reduce conflict for RESERVED_WORD in state 46 resolved as shift
